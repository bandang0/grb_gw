'''Plot the bidimensional error functions.'''

from itertools import product
import numpy as np
from matplotlib import pyplot as plt

from helpers import *

# Parameter ranges:
N_ = np.linspace(BEST_N - 2., BEST_N + 2., EXPLO_EXTENT) #[1.1, 1.15, 1.2, 1.25, 1.3]]
E_ = np.linspace(BEST_E - 2., BEST_E + 2., EXPLO_EXTENT)#[10. ** x for x in [50., 50.25, 50.50, 50.75, 51.]]
EPSILONB_ = np.linspace(BEST_EB - 2., BEST_EB + 2., EXPLO_EXTENT)#[x * 1.e-2 for x in [0.3, 0.35, 0.4, 0.45]]#[10. ** x for x in np.linspace(-2., -2., 5)
GBMIN_ = np.linspace(BEST_GB_MIN - 1., BEST_GB_MIN + 1., EXPLO_EXTENT)#[1. + x for x in [0.25, 0.3, 0.35]]#[10. ** x for x in np.linspace(-2., 0.3, 9)]
GBMAX_ = np.linspace(BEST_GB_MAX - 1., BEST_GB_MAX + 1., EXPLO_EXTENT)#[3. + x for x in [0.05, 0.1, 0.15, 0.2]]
go = True

x = list()
y = list()
e = list()
for n, eb in product(N_, EPSILONB_):
    x.append(n)
    y.append(eb)
    err = fit_err(cocoon_dic([n, BEST_E, eb, BEST_GB_MIN, BEST_GB_MAX]))
    e.append(err)
    print(n, eb, err)
e = log(np.array(e))
x = np.array(x)
y = np.array(y)
plt.figure(9)
plt.xlabel("$n$")
plt.ylabel("$\epsilon_b$")
plt.scatter(x, y, c=e, cmap='jet',vmin=e.min(), vmax=e.max(), label = "Error")
plt.legend()
plt.colorbar()
plt.savefig("plots/n_epsilon_b.pdf")

if go:
    x = list()
    y = list()
    e = list()
    for E, n in product(E_, N_):
        x.append(E)
        y.append(n)
        err = fit_err(cocoon_dic([n, E, BEST_EB, BEST_GB_MIN, BEST_GB_MAX]))
        e.append(err)
        print(E, n, err)
    e = log(np.array(e))
    x = np.array(x)
    y = np.array(y)
    plt.figure(0)
    plt.xlabel("E")
    plt.ylabel("n")
    plt.scatter(x, y, c=e, cmap='jet',vmin=e.min(), vmax=e.max())
    plt.colorbar()
    plt.savefig("misc/E_n.pdf")

if go:
    x = list()
    y = list()
    e = list()
    for E, gbmin in product(E_, GBMIN_):
        x.append(E)
        y.append(gbmin)
        err = fit_err(cocoon_dic([BEST_N, E, BEST_EB, gbmin, BEST_GB_MAX]))
        e.append(err)
        print(E, gbmin, err)
    e = log(np.array(e))
    x = np.array(x)
    y = np.array(y)
    plt.figure(1)
    plt.xlabel("E")
    plt.ylabel("gbmin")
    plt.scatter(x, y, c=e, cmap='jet',vmin=e.min(), vmax=e.max())
    plt.colorbar()
    plt.savefig("misc/E_gbmin.pdf")

if go:
    x = list()
    y = list()
    e = list()
    for E, gbmax in product(E_, GBMAX_):
        x.append(E)
        y.append(gbmax)
        err = fit_err(cocoon_dic([BEST_N, E, BEST_EB, BEST_GB_MIN, gbmax]))
        e.append(err)
        print(E, gbmax, err)
    e = log(np.array(e))
    x = np.array(x)
    y = np.array(y)
    plt.figure(2)
    plt.xlabel("E")
    plt.ylabel("gbmax")
    plt.scatter(x, y, c=e, cmap='jet',vmin=e.min(), vmax=e.max())
    plt.colorbar()
    plt.savefig("misc/E_gbmax.pdf")

if go:
    x = list()
    y = list()
    e = list()
    for E, eb in product(E_, EPSILONB_):
        x.append(E)
        y.append(eb)
        err = fit_err(cocoon_dic([BEST_N, E, eb, BEST_GB_MIN, BEST_GB_MAX]))
        e.append(err)
        print(E, eb, err)
    e = log(np.array(e))
    x = np.array(x)
    y = np.array(y)
    plt.figure(3)
    plt.xlabel("E")
    plt.ylabel("eb")
    plt.scatter(x, y, c=e, cmap='jet',vmin=e.min(), vmax=e.max())
    plt.colorbar()
    plt.savefig("misc/E_eb.pdf")

if go:
    x = list()
    y = list()
    e = list()
    for m, M in product(GBMIN_, GBMAX_):
        x.append(m)
        y.append(M)
        err = fit_err(cocoon_dic([BEST_N, BEST_E, BEST_EB, m, M]))
        e.append(err)
        print(m, M, err)
    e = log(np.array(e))
    x = np.array(x)
    y = np.array(y)
    plt.figure(4)
    plt.xlabel("gbmin")
    plt.ylabel("gbmax")
    plt.scatter(x, y, c=e, cmap='jet',vmin=e.min(), vmax=e.max())
    plt.colorbar()
    plt.savefig("misc/gbmin_gbmax.pdf")

if go:
    x = list()
    y = list()
    e = list()
    for m, n in product(GBMIN_, N_):
        x.append(m)
        y.append(n)
        err = fit_err(cocoon_dic([n, BEST_E, BEST_EB, m, BEST_GB_MAX]))
        e.append(err)
        print(m, n, err)
    e = log(np.array(e))
    x = np.array(x)
    y = np.array(y)
    plt.figure(5)
    plt.xlabel("gbmin")
    plt.ylabel("n")
    plt.scatter(x, y, c=e, cmap='jet',vmin=e.min(), vmax=e.max())
    plt.colorbar()
    plt.savefig("misc/gbmin_n.pdf")

if go:
    x = list()
    y = list()
    e = list()
    for m, eb in product(GBMIN_, EPSILONB_):
        x.append(m)
        y.append(eb)
        err = fit_err(cocoon_dic([BEST_N, BEST_E, eb, m, BEST_GB_MAX]))
        e.append(err)
        print(m, eb, err)
    e = log(np.array(e))
    x = np.array(x)
    y = np.array(y)
    plt.figure(6)
    plt.xlabel("gbmin")
    plt.ylabel("eb")
    plt.scatter(x, y, c=e, cmap='jet',vmin=e.min(), vmax=e.max())
    plt.colorbar()
    plt.savefig("misc/gbmin_eb.pdf")

if go:
    x = list()
    y = list()
    e = list()
    for M, n in product(GBMAX_, N_):
        x.append(M)
        y.append(n)
        err = fit_err(cocoon_dic([n, BEST_E, BEST_EB, BEST_GB_MIN, M]))
        e.append(err)
        print(M, n, err)
    e = log(np.array(e))
    x = np.array(x)
    y = np.array(y)
    plt.figure(7)
    plt.xlabel("gbmax")
    plt.ylabel("n")
    plt.scatter(x, y, c=e, cmap='jet',vmin=e.min(), vmax=e.max())
    plt.colorbar()
    plt.savefig("misc/gbmax_n.pdf")

if go:
    x = list()
    y = list()
    e = list()
    for M, eb in product(GBMAX_, EPSILONB_):
        x.append(M)
        y.append(eb)
        err = fit_err(cocoon_dic([BEST_N, BEST_E, eb, BEST_GB_MIN, M]))
        e.append(err)
        print(M, eb, err)
    e = log(np.array(e))
    x = np.array(x)
    y = np.array(y)
    plt.figure(8)
    plt.xlabel("gbmax")
    plt.ylabel("eb")
    plt.scatter(x, y, c=e, cmap='jet',vmin=e.min(), vmax=e.max())
    plt.colorbar()
    plt.savefig("misc/gbmax_eb.pdf")

x = list()
y = list()
e = list()
for n, eb in product(N_, EPSILONB_):
    x.append(n)
    y.append(eb)
    err = fit_err(cocoon_dic([n, BEST_E, eb, BEST_GB_MIN, BEST_GB_MAX]))
    e.append(err)
    print(n, eb, err)
e = log(np.array(e))
x = np.array(x)
y = np.array(y)
plt.figure(9)
plt.xlabel("n")
plt.ylabel("eb")
plt.scatter(x, y, c=e, cmap='jet',vmin=e.min(), vmax=e.max())
plt.colorbar()
plt.savefig("misc/n_eb.pdf")
